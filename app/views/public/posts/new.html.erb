<div class="background container py-5 rounded">
  <div class="row">
    <div class="col-10 mx-auto">
      <!--タイトル-->
      <div class="row mb-4">
        <div class="title p-2 rounded">
          <h3 class="mx-2 my-0">新規投稿</h3>
        </div>
      </div>

      <!--投稿フォーム-->
      <%= form_with model: @post, id: 'form' do |f| %>
        <%= render "form", post: @post, f: f %>

        <!--地図投稿フォーム-->
        <div class="form-group">
          <%= f.label :map, "地図" %>

          <!--地図検索フォーム-->
          <div class="d-flex">
            <input id="address" class="form-control" type="text" placeholder="地名検索">
            <input type="button" value="検索" onclick="codeAddress()">
          </div>
        </div>

        <!--地図の表示-->
        <div class="form-map">
          <div id='map'></div>
        </div>

        <!--投稿ボタン-->
        <div class="form-group text-center pt-5">
          <!--ゲストユーザーの利用制限コメント-->
          <% if current_user.name == 'ゲストユーザー' %>
            <p>実際に投稿することはできません。</p>
          <% end %>

          <%= f.submit "投稿", class: "button-blue btn col-sm-3 col-5" %>
        </div>
      <% end %>
    </div>
  </div>
</div>

<!-- js部分 -->
<script>
  //mapが正しく表示されるための記述
  if (window.google) {
    initMap();
  } else {
    $.ajax('https://maps.googleapis.com/maps/api/js?key=<%= ENV["GOOGLE_MAP_API_KEY"] %>&callback=initMap&libraries=places', {
      crossDomain: true,
      dataType: 'script'
    });
  }

  //初期マップの設定
  var map
  var marker
  function initMap(){
    geocoder = new google.maps.Geocoder()

    map = new google.maps.Map(document.getElementById('map'), {
      center:  {lat: 35.690921, lng: 139.700258},  //新宿駅
      zoom: 15,
    });

    //検索フォーム
    var input = document.getElementById("address");
    var searchBox = new google.maps.places.SearchBox(input);

    map.addListener("bounds_changed", () => {
      searchBox.setBounds(map.getBounds());
    });
  }

  //検索後のマップ作成
  var geocoder
  var aft
  function codeAddress(){
    var inputAddress = document.getElementById('address').value;
    geocoder.geocode( { 'address': inputAddress}, function(results, status) {
      if (status == 'OK') {
          //マーカーが複数できないようにする
          if (aft == true){
              marker.setMap(null);
          }

          //新しくマーカーを作成する
          map.setCenter(results[0].geometry.location);
              marker = new google.maps.Marker({
              map: map,
              position: results[0].geometry.location,
              draggable: true // ドラッグ可能にする
          });

          //二度目以降か判断
          aft = true

          //検索した時に緯度経度を入力する
          document.getElementById('lat').value = results[0].geometry.location.lat();
          document.getElementById('lng').value = results[0].geometry.location.lng();

          // マーカーのドロップ（ドラッグ終了）時のイベント
          google.maps.event.addListener( marker, 'dragend', function(ev){
              // イベントの引数evの、プロパティ.latLngが緯度経度
              document.getElementById('lat').value = ev.latLng.lat();
              document.getElementById('lng').value = ev.latLng.lng();
          });
      } else {
        alert('該当する場所が見つかりませんでした');
      }
    });
  }

  //バリデーションエラー
  $(document).ready(function() {
    // バリデーションの実行
    $('#form').validate({
      // ルール設定
      rules: {
        "post[title]": {
          required: true,
        },
        "post[body]": {
          required: true,
        },
        "post[post_images][]": {
          required: true,
        },
        "post[tag_list]": {
          required: true,
        },
        "post[address]": {
          required: true,
        },
      },
      // エラーメッセージの定義
      messages: {
        "post[title]": {
          required: "タイトルを入力してください",
        },
        "post[body]": {
          required: "説明文を入力してください",
        },
        "post[post_images][]": {
          required: "画像を添付してください",
        },
        "post[tag_list]": {
          required: "タグを入力してください",
        },
        "post[address]": {
          required: "場所・地名を入力してください",
        },
      },
      //エラー時とチェックok時のレイアウト
      errorClass: "is-invalid",
      errorElement: "p",
      validClass: "is-valid",
    })
    // 入力欄をフォーカスアウトしたときにバリデーションを実行
    $("#post_title, #post_body, #post_post_images, #post_tag_list, #post_address").blur(function () {
      $(this).valid();
    });
  })
</script>